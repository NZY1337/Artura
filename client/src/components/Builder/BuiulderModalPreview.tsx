import { useState, useEffect } from "react";

// components
import Close from "@mui/icons-material/Close";
import GenericModal from "../UtilityComponents/modals/GenericModal";
import Box from "@mui/material/Box";
import Avatar from "@mui/material/Avatar";
import Stack from "@mui/material/Stack";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import Divider from "@mui/material/Divider";
import Button from "@mui/material/Button";
import BuilderOptionsPreview from "./BuilderOptionsPreview";

// types
import type { ProjectProps } from "../../types";

const BuilderModalPreview = ({
    project,
    open,
    handleCloseModal,
    slideIndex,
    setSlideIndex
}: {
    project: ProjectProps;
    open: boolean;
    slideIndex: number;
    handleCloseModal: () => void;
    setSlideIndex: (index: number) => void
}) => {
    const [previewImage, setPreviewImage] = useState<string | null>(null);

    const imagesUploadedByUser = project?.images.filter(({ url }) =>
        url.includes("uploaded-")
    );

    const imagesUploadedByAi = project?.images.filter(({ url }) =>
        !url.includes("uploaded-")
    );

    // image uploaded by user
    const handleMouseEnter = (url: string) => {
        setPreviewImage(url);
    };

    // should be the selected image generated by AI
    const handleMouseLeave = () => {
        setPreviewImage(imagesUploadedByAi[slideIndex].url);
    };

    useEffect(() => {
        // if (!open) {
        //     setPreviewImage(null);
        //     setSlideIndex(0)
        // } else {
        //     setPreviewImage(imagesUploadedByAi[slideIndex]?.url || null);
        // }

        if (open) {
            setPreviewImage(imagesUploadedByAi[slideIndex]?.url || null);
        }
    }, [open]);

    return (
        <GenericModal open={open}>
            <Grid container
                sx={(theme) => ({
                    height: "inherit",
                    position: "relative",
                    [theme.breakpoints.down("lg")]: {
                        height: "unset",
                        // marginTop: "2rem",
                        padding: '0'
                    },
                })}>
                <Grid
                    size={{ xs: 12, md: 12, lg: 7 }}
                    sx={(theme) => ({
                        p: 4,
                        display: "flex",
                        alignItems: "center",
                        [theme.breakpoints.down("lg")]: {
                            // marginTop: "2rem",
                            padding: '0'
                        },
                    })}>
                    <Box sx={{ position: "relative", width: "100%" }}>
                        <Box
                            component="img"
                            src={previewImage!}
                            sx={{
                                top: 0,
                                left: 0,
                                objectPosition: "center",
                                width: "100%",
                                height: "100%",
                                zIndex: 10,
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "center",
                                pointerEvents: "none",
                                maxHeight: {
                                    xs: "30vh",   // on small screens
                                    sm: "500px",  // on small+
                                    md: "600px",  // on medium+
                                    lg: "700px",  // on large+
                                },
                            }}>

                        </Box>
                    </Box>
                </Grid>

                <Grid size={{ xs: 12, md: 12, lg: 5 }} sx={{ display: "flex", alignItems: "center", p: 4 }}>
                    <Box>
                        <Stack direction="row" spacing={1} alignItems="center" mb={2}>
                            {imagesUploadedByUser.map((image) => (
                                <Avatar
                                    key={image.url}
                                    variant="rounded"
                                    src={image.url}
                                    onMouseEnter={() => handleMouseEnter(image.url)}
                                    onMouseLeave={handleMouseLeave}
                                    sx={{ width: 80, height: 80, cursor: "pointer" }}
                                />
                            ))}
                        </Stack>

                        <Typography variant="body2" sx={{ color: "#ccc", mb: 3 }}>
                            {project?.prompt}
                        </Typography>

                        <Divider sx={{ borderColor: "#333", my: 2 }} />

                        <BuilderOptionsPreview
                            builderState={{
                                size: project?.size,
                                quality: project?.quality,
                                spaceType: ["Living Room"],
                                designTheme: ["Modern"],
                                category: ["Design Generator"],
                                prompt: project?.prompt,
                                n: 1,
                                output_format: "png",
                            }}
                        />
                    </Box>
                </Grid>

                <Button
                    sx={{
                        position: "absolute",
                        top: "5px",
                        right: "5px",
                        color: "white",
                    }}
                    onClick={handleCloseModal}
                >
                    <Close />
                </Button>
            </Grid>
        </GenericModal>
    );
};

export default BuilderModalPreview;
